# -*- coding: utf-8 -*-
import scrapy
from myanimelist.items import MyanimelistItem
from bs4.dammit import EntitySubstitution
import unicodedata

class MyanimelistspiderSpider(scrapy.Spider):
	name = "myanimelistSpider"
	allowed_domains = ["myanimelist.net"]
	start_urls = ["http://myanimelist.net/topmanga.php?type=&limit=0"]

	def parse(self, response):

		for sel in response.xpath('//div[@id="content"]/div[@style="padding: 0 10px 10px 10px;"]/table'):

			urls = sel.xpath('//tr/td[2]/div[@class="picSurround"]/a/@href').extract()
			names = sel.xpath('//tr/td[3]/a[@class="hoverinfo_trigger"]/strong/text()').extract()

		manga_name = []
		for name in names:
			normalizedName = unicodedata.normalize('NFKD', name).encode('ASCII', 'ignore')
			#print normalizedName
			name = [x.lower() for x in normalizedName]
			name = ''.join(str(e) for e in name)
			import HTMLParser
			htmlp = HTMLParser.HTMLParser()
			manga_name.append(htmlp.unescape(name))
	

		manga_url = []
		esub = EntitySubstitution()
		for url in urls:
			url = esub.substitute_html(url)
			manga_url.append("http://myanimelist.net"+str(url))
		
		for i in range (0, len(manga_url)):
			item = MyanimelistItem(manga_link=manga_url[i], manga_name=manga_name[i])
			request = scrapy.Request(str(manga_url[i]),callback=self.parse_manga, meta={'item':item})
			#request.meta['item'] = item
			stats_url = str(manga_url[i]) + "/stats"
			print stats_url
			request = scrapy.Request(str(stats_url),callback=self.parse_stats, meta={'item':item})

			yield request

	def parse_manga(self, response):
		
		item = response.meta['item']
		print response.url

		manga_img = response.xpath('//div[@id="content"]/table/tr/td[1]/div[@style="text-align: center;"]/a/img/@src').extract()
		print manga_img
		item["manga_img"] = manga_img
				
		manga_favorites = response.xpath('//div[@id="content"]/table/tr/td[1]/div/text()').extract()[-1]
		print "favorites " + str(manga_favorites)
		item["manga_favorites"] = manga_favorites

		manga_members = response.xpath('//div[@id="content"]/table/tr/td[1]/div/text()').extract()[-2]
		print "members " + str(manga_members)
		item["manga_members"] = manga_members

		manga_popularity = response.xpath('//div[@id="content"]/table/tr/td[1]/div/text()').extract()[-3]
		print "popularity " + str(manga_popularity)
		item["manga_popularity"] = manga_popularity

		manga_rank = response.xpath('//div[@id="content"]/table/tr/td[1]/div/text()').extract()[-4]
		print "rank " + str(manga_rank)
		item["manga_rank"] = manga_rank

		manga_score = response.xpath('//div[@id="content"]/table/tr/td[1]/div/text()').extract()[-6]
		print "score " + str(manga_score)
		item["manga_score"] = manga_score		
		
		
		yield item
	
	def parse_stats(self, response):
		item = response.meta['item']
		print "oi"
		reading = response.xpath('//div[@id="content"]/table/tr/td[1]/div[@style="text-align: center;"]/a/img/@src').extract()
		item["manga_reading"] = reading
		yield item
		
	
